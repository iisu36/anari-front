[{"/Users/iisakki/anari/anari-front/src/index.js":"1","/Users/iisakki/anari/anari-front/src/App.js":"2","/Users/iisakki/anari/anari-front/src/Table.js":"3"},{"size":167,"mtime":1610264848000,"results":"4","hashOfConfig":"5"},{"size":525,"mtime":1610281696000,"results":"6","hashOfConfig":"5"},{"size":11766,"mtime":1610278134000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1jguebb",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/iisakki/anari/anari-front/src/index.js",[],["16","17"],"/Users/iisakki/anari/anari-front/src/App.js",[],"/Users/iisakki/anari/anari-front/src/Table.js",["18","19","20","21","22","23","24","25","26","27"],"import 'bootstrap/dist/css/bootstrap.min.css'\nimport $ from 'jquery';\nimport 'bootstrap/dist/js/bootstrap.bundle.min'\nimport Popper from 'popper.js'\n\nimport React, { useState } from 'react'\n\nconst Standings = ({ stats }) => {\n\n    let veikkaajat = [\n        {\n            standing: 0,\n            name: \"Kuukkeli\",\n            teams: [\n                {\n                    name: \"Colorado Avalanche\",\n                    division: \"West\",\n                    points: 0,\n                },\n                {\n                    name: \"St. Louis Blues\",\n                    division: \"West\",\n                    points: 0,\n                },\n                {\n                    name: \"Pittsburgh Penguins\",\n                    division: \"East\",\n                    points: 0,\n                },\n                {\n                    name: \"Washington Capitals\",\n                    division: \"East\",\n                    points: 0,\n                },\n                {\n                    name: \"Calgary Flames\",\n                    division: \"North\",\n                    points: 0,\n                },\n                {\n                    name: \"Toronto Maple Leafs\",\n                    division: \"North\",\n                    points: 0,\n                },\n                {\n                    name: \"Dallas Stars\",\n                    division: \"Central\",\n                    points: 0,\n                },\n                {\n                    name: \"Tamba Bay Lightning\",\n                    division: \"Central\",\n                    points: 0,\n                }\n            ],\n            points: 0,\n            pisteporssi: 86\n        },\n        {\n            standing: 0,\n            name: \"Karvanen\",\n            teams: [\n                {\n                    name: \"Colorado Avalanche\",\n                    division: \"West\",\n                    points: 0,\n                },\n                {\n                    name: \"Vegas Golden Knights\",\n                    division: \"West\",\n                    points: 0,\n                },\n                {\n                    name: \"Boston Bruins\",\n                    division: \"East\",\n                    points: 0,\n                },\n                {\n                    name: \"New York Rangers\",\n                    division: \"East\",\n                    points: 0,\n                },\n                {\n                    name: \"Edmonton Oilers\",\n                    division: \"North\",\n                    points: 0,\n                },\n                {\n                    name: \"Vancouver Canucks\",\n                    division: \"North\",\n                    points: 0,\n                },\n                {\n                    name: \"Carolina Hurricanes\",\n                    division: \"Central\",\n                    points: 0,\n                },\n                {\n                    name: \"Tamba Bay Lightning\",\n                    division: \"Central\",\n                    points: 0,\n                }\n            ],\n            points: 0,\n            pisteporssi: 0\n        },\n        {\n            standing: 0,\n            name: \"Huida\",\n            teams: [\n                {\n                    name: \"Colorado Avalanche\",\n                    division: \"West\",\n                    points: 0,\n                },\n                {\n                    name: \"St. Louis Blues\",\n                    division: \"West\",\n                    points: 0,\n                },\n                {\n                    name: \"Boston Bruins\",\n                    division: \"East\",\n                    points: 0,\n                },\n                {\n                    name: \"New York Islanders\",\n                    division: \"East\",\n                    points: 0,\n                },\n                {\n                    name: \"Toronto Maple Leafs\",\n                    division: \"North\",\n                    points: 0,\n                },\n                {\n                    name: \"Vancouver Canucks\",\n                    division: \"North\",\n                    points: 0,\n                },\n                {\n                    name: \"Carolina Hurricanes\",\n                    division: \"Central\",\n                    points: 0,\n                },\n                {\n                    name: \"Tamba Bay Lightning\",\n                    division: \"Central\",\n                    points: 0,\n                }\n            ],\n            points: 0,\n            pisteporssi: 80\n        },\n        {\n            standing: 0,\n            name: \"Pääjoki\",\n            teams: [\n                {\n                    name: \"Colorado Avalanche\",\n                    division: \"West\",\n                    points: 0,\n                },\n                {\n                    name: \"Vegas Golden Knights\",\n                    division: \"West\",\n                    points: 0,\n                },\n                {\n                    name: \"Boston Bruins\",\n                    division: \"East\",\n                    points: 0,\n                },\n                {\n                    name: \"Washington Capitals\",\n                    division: \"East\",\n                    points: 0,\n                },\n                {\n                    name: \"Toronto Maple Leafs\",\n                    division: \"North\",\n                    points: 0,\n                },\n                {\n                    name: \"Vancouver Canucks\",\n                    division: \"North\",\n                    points: 0,\n                },\n                {\n                    name: \"Carolina Hurricanes\",\n                    division: \"Central\",\n                    points: 0,\n                },\n                {\n                    name: \"Tamba Bay Lightning\",\n                    division: \"Central\",\n                    points: 0,\n                }\n            ],\n            points: 0,\n            pisteporssi: 76\n        },\n    ]\n\n    const pointCounter = () => {\n\n        veikkaajat.map(veikkaaja => {\n\n            let points = 0\n\n            veikkaaja.teams.map(team => {\n                points += team.points\n            })\n\n            veikkaaja.points = points\n        })\n    }\n\n    if (!stats.league || !stats.divisions) {\n        return null\n    }\n\n    stats.league.map(team => {\n        veikkaajat.map(veikkaaja => {\n            veikkaaja.teams.map(joukkue => {\n                if (team.team === joukkue.name) {\n                    joukkue.points = team.points\n                }\n            })\n        })\n    })\n\n    pointCounter()\n\n    veikkaajat = veikkaajat.sort((a, b) => {\n\n        if (a.points < b.points) return 1\n        if (a.points > b.points) return -1\n\n        if (a.points === b.points) {\n            if (a.name.toUpperCase() < b.name.toUpperCase()) return -1\n            else return 1\n        }\n    })\n\n    let index = 1\n\n    veikkaajat.map(veikkaaja => {\n        veikkaaja.standing = index++\n    })\n\n    const style = {\n        fontSize: 9\n    }\n\n    return (\n        <div className=\"d-flex flex-row justify-content-around\">\n\n            <div>\n                <table>\n                    <tbody>\n\n                        {veikkaajat.map(veikkaaja => {\n\n                            return (\n                                <>\n                                    <tr>\n                                        <td rowSpan=\"8\">{veikkaaja.standing}.</td>\n                                        <td rowSpan=\"8\">{veikkaaja.name}</td>\n                                        <td rowSpan=\"2\">{veikkaaja.teams[0].division}</td>\n                                        <td>{veikkaaja.teams[0].name}</td>\n                                        <td>{veikkaaja.teams[0].points}</td>\n                                        <td rowSpan=\"8\">Yhteensä {veikkaaja.points}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{veikkaaja.teams[1].name}</td>\n                                        <td>{veikkaaja.teams[1].points}</td>\n                                    </tr>\n                                    <tr>\n                                        <td rowSpan=\"2\">{veikkaaja.teams[2].division}</td>\n                                        <td>{veikkaaja.teams[2].name}</td>\n                                        <td>{veikkaaja.teams[2].points}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{veikkaaja.teams[3].name}</td>\n                                        <td>{veikkaaja.teams[3].points}</td>\n                                    </tr>\n                                    <tr>\n                                        <td rowSpan=\"2\">{veikkaaja.teams[4].division}</td>\n                                        <td>{veikkaaja.teams[4].name}</td>\n                                        <td>{veikkaaja.teams[4].points}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{veikkaaja.teams[5].name}</td>\n                                        <td>{veikkaaja.teams[5].points}</td>\n                                    </tr>\n                                    <tr>\n                                        <td rowSpan=\"2\">{veikkaaja.teams[6].division}</td>\n                                        <td>{veikkaaja.teams[6].name}</td>\n                                        <td>{veikkaaja.teams[6].points}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>{veikkaaja.teams[7].name}</td>\n                                        <td>{veikkaaja.teams[7].points}</td>\n                                    </tr>\n\n                                    <br></br>\n                                </>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n\n            <div>\n                {stats.divisions.map(division => {\n                    return (\n                        <div key={division.division}>\n                            <h3>{division.division}</h3>\n                            <table>\n                                <tbody>\n                                    {division.teams.map(team => {\n\n                                        const key = `division${team.id}`\n\n                                        return (\n                                            <tr key={key}>\n                                                <td>{team.divisionRank}.</td>\n                                                <td>{team.team}</td>\n                                                <td>{team.points}</td>\n                                            </tr>\n                                        )\n                                    })}\n                                </tbody>\n                            </table>\n                        </div>\n                    )\n                })}\n            </div>\n\n            <div>\n                <h3>NHL</h3>\n                <table>\n                    <tbody>\n                        {stats.league.map(team => {\n\n                            let date = team.lastUpdated.toString().substring(5, 16)\n\n                            const key = `league${team.id}`\n                            return (\n                                <tr key={key}>\n                                    <td>{team.leagueRank}.</td>\n                                    <td>{team.team}</td>\n                                    <td>{team.points}</td>\n                                    <td style={style}>{date}</td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Standings",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":2,"column":8,"nodeType":"34","messageId":"35","endLine":2,"endColumn":9},{"ruleId":"32","severity":1,"message":"36","line":4,"column":8,"nodeType":"34","messageId":"35","endLine":4,"endColumn":14},{"ruleId":"32","severity":1,"message":"37","line":6,"column":17,"nodeType":"34","messageId":"35","endLine":6,"endColumn":25},{"ruleId":"38","severity":1,"message":"39","line":207,"column":34,"nodeType":"40","messageId":"41","endLine":207,"endColumn":36},{"ruleId":"38","severity":1,"message":"39","line":211,"column":38,"nodeType":"40","messageId":"41","endLine":211,"endColumn":40},{"ruleId":"38","severity":1,"message":"39","line":223,"column":27,"nodeType":"40","messageId":"41","endLine":223,"endColumn":29},{"ruleId":"38","severity":1,"message":"39","line":224,"column":34,"nodeType":"40","messageId":"41","endLine":224,"endColumn":36},{"ruleId":"38","severity":1,"message":"39","line":225,"column":41,"nodeType":"40","messageId":"41","endLine":225,"endColumn":43},{"ruleId":"38","severity":1,"message":"42","line":235,"column":41,"nodeType":"40","messageId":"43","endLine":235,"endColumn":43},{"ruleId":"38","severity":1,"message":"39","line":248,"column":30,"nodeType":"40","messageId":"41","endLine":248,"endColumn":32},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.sort() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation"]